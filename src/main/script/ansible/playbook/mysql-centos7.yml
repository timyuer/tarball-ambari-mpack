# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# 安装mysql，前提条件是关闭selinux
- name: Extract tarball name from URL
  set_fact:
    mysql_tarball: "{{ mysql_url | urlsplit('path') | basename }}"
- debug:
    msg:
      - "mysql_tarball: {{ mysql_tarball }}"
- name: Remove mariadb rpm to server
  yum:
    name: "mariadb*"
    state: absent
- name: Delete mysql directory
  file:
    path: "{{ mysql_rpm_dest }}"
    state: absent
- name: Download MySQL
  get_url:
    url: "{{ mysql_url }}"
    dest: "{{ mysql_tarball_dest }}"
    force: yes
    validate_certs: no
- name: Create MySQL group
  group:
    name: mysql
    state: present
- name: Create MySQL user
  user:
    name: mysql
    comment: "MySQL user"
    shell: /bin/bash
    group: mysql
- name: Create directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: 0755
  loop:
    - path: /opt/mysql
      owner: root
      group: root
    - path: /opt/bdp/data01/mysql
      owner: mysql
      group: mysql
    - path: /var/lib/mysql
      owner: mysql
      group: mysql
- name: Unarchive mysql package
  unarchive:
    src: "{{ mysql_tarball_dest }}/{{ mysql_tarball }}"
    dest: "{{ mysql_rpm_dest }}"
    keep_newer: True
    remote_src: yes
- name: Find all rpm files in "{{ mysql_rpm_dest }}" folder
  find:
    paths: "{{ mysql_rpm_dest }}"
    pattern: "*.rpm"
  register: rpm_files
- set_fact:
    rpm_list: "{{ rpm_files.files | map(attribute='path') | list }}"
- debug:
    msg: "{{ rpm_list }}"
- name: installing the rpm files
  yum:
    name: "{{rpm_list}}"
    state: present
- name: Remove existing my.cnf
  file:
    path: /etc/my.cnf
    state: absent
- name: Add my.cnf
  blockinfile:
    backup: no
    path: /etc/my.cnf
    state: present
    create: True
    block: |
      [client]
      default-character-set=utf8mb4
      [mysql]
      socket=/var/lib/mysql/mysql.sock
      default-character-set=utf8mb4
      [mysqld]
      socket=/var/lib/mysql/mysql.sock
      # Disabling symbolic-links is recommended to prevent assorted security risks
      symbolic-links=0
      log-error=/var/log/mysqld.log
      pid-file=/var/run/mysqld/mysqld.pid
      # 注意将数据目录修改为/opt/data目录，/opt/data目录的磁盘是独立挂载的大容量磁盘
      datadir=/opt/bdp/data01/mysql
      character_set_server=utf8mb4
      character-set-client-handshake=FALSE
      collation-server=utf8mb4_unicode_ci
      max_connections=800
      max_connect_errors=1000
      # ranger used
      log_bin_trust_function_creators=1
      # disable ssl
      skip_ssl
      log-bin=mysql-bin # 开启 binlog
      binlog-format=ROW # 选择 ROW 模式
      server_id=1 # 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复
      # binlog_row_image参数，只在row模式下生效，包含full、minimal、noblob三个值
      binlog_row_image=full
      # bin log日志每达到设定大小后，会使用新的bin log日志
      max_binlog_size=500M
      # 保留指定日期范围内的bin log历史日志
      expire_logs_days=15
- name: Ensure mysql is running
  service:
    name: mysqld
    enabled: yes
    state: started

- name: Echo result
  command: echo "deploy mysql over"
  register: ok_var
- debug:
    msg: "{{ ok_var.stdout }}"